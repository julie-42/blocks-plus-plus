name: Rust

on: push

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            rust
      - name: Clippy
        run: |
          cd rust
          cargo clippy
      - name: rustfmt
        run: |
          cd rust
          cargo fmt --check
  build:
    name: Build ${{ matrix.platform.build_for }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - build_for: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bin: libblocks_plus_plus.so

          - build_for: wasm32
            os: ubuntu-20.04
            target: wasm32-unknown-emscripten
            bin: blocks_plus_plus.wasm

          - build_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: blocks_plus_plus.dll

          - build_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: libblocks_plus_plus.dylib

          - build_for: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: libblocks_plus_plus.dylib

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        if: contains(matrix.platform.target, 'wasm')
        with:
            toolchain: nightly
            target: wasm32-unknown-emscripten
      - name: Install Emscripten
        if: contains(matrix.platform.target, 'wasm')
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install 3.1.39
          ./emsdk activate 3.1.39
          source ./emsdk_env.sh
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            rust
      - name: Build
        uses: houseabsolute/actions-rust-cross@v0
        with:
          target: ${{ matrix.platform.target }}
          command: build
          args: "--locked --release"
          strip: true
          working-directory: rust
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.build_for }}_${{ matrix.platform.bin }}
          path: rust/target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
