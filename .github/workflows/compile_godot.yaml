name: compile_godot

on:
  push  #:
    # paths:
    #   - deploy/godot/*


env:
  VULKAN_SDK_VERSION: 1.3.290.0


jobs:
  compile-web:
    name: Compile web
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Clone Godot
        uses: actions/checkout@v4
        with:
          repository: godotengine/godot
          ref: 4.2.2-stable
          path: godot_sources

      - name: Install Scons
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: scons
      - name: Install Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: 3.1.39
          actions-cache-folder: 'emsdk-cache'
        
      - name: Build template
        run: |
          cp deploy/godot/custom.py godot_sources
          cd godot_sources

          scons platform=web target=template_release
          scons platform=web target=template_debug

          mv bin/godot.web.template_release.wasm32.dlink.zip bin/web_dlink_release.zip
          mv bin/godot.web.template_debug.wasm32.dlink.zip bin/web_dlink_debug.zip
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: export_web
          path: |
            godot_sources/bin/web_dlink_release.zip
            godot_sources/bin/web_dlink_debug.zip
  
  compile-linux:
    name: Compile linuxbsd
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Clone Godot
        uses: actions/checkout@v4
        with:
          repository: godotengine/godot
          ref: 4.2.2-stable
          path: godot_sources

      - name: Install Linux dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: build-essential scons pkg-config libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu1-mesa-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev
        
      - name: Build template
        run: |
          cp deploy/godot/custom.py godot_sources
          cd godot_sources

          scons platform=linuxbsd target=template_release arch=x86_64
          scons platform=linuxbsd target=template_debug arch=x86_64

          mv bin/godot.linuxbsd.template_release.x86_64 bin/linux_release.x86_64
          mv bin/godot.linuxbsd.template_debug.x86_64 bin/linux_debug.x86_64
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: export_linuxbsd
          path: |
            godot_sources/bin/linux_release.x86_64
            godot_sources/bin/linux_debug.x86_64
    
  compile-windows:
    name: Compile windows
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Clone Godot
        uses: actions/checkout@v4
        with:
          repository: godotengine/godot
          ref: 4.2.2-stable
          path: godot_sources
        
      - name: Install Scons
        run: |
          python -m pip install scons
        
      - name: Build template
        run: |
          cp deploy/godot/custom.py godot_sources
          cd godot_sources

          scons platform=windows target=template_release arch=x86_64
          scons platform=windows target=template_debug arch=x86_64

          mv bin/godot.windows.template_release.x86_64.exe bin/windows_release_x86_64.exe
          mv bin/godot.windows.template_release.x86_64.console.exe bin/windows_release_x86_64_console.exe
          mv bin/godot.windows.template_debug.x86_64.exe bin/windows_debug_x86_64.exe
          mv bin/godot.windows.template_debug.x86_64.console.exe bin/windows_debug_x86_64_console.exe
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: export_windows
          path: |
            godot_sources/bin/windows_release_x86_64.exe
            godot_sources/bin/windows_release_x86_64_console.exe
            godot_sources/bin/windows_debug_x86_64.exe
            godot_sources/bin/windows_debug_x86_64_console.exe
    
  compile-macos:
    name: Compile macos
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Clone Godot
        uses: actions/checkout@v4
        with:
          repository: godotengine/godot
          ref: 4.2.2-stable
          path: godot_sources
        
      - name: Install macos dependencies
        run: |
          brew install scons
          
          # shamelessly copied from https://github.com/bruvzg/gdsdecomp/blob/master/.github/actions/install-swiftshader/action.yml
          wget "https://sdk.lunarg.com/sdk/download/${VULKAN_SDK_VERSION}/mac/vulkansdk-macos-${VULKAN_SDK_VERSION}.dmg?Human=true" -O vulkansdk.dmg
          hdiutil attach vulkansdk.dmg
          sudo /Volumes/vulkansdk-macos-${VULKAN_SDK_VERSION}/InstallVulkan.app/Contents/MacOS/InstallVulkan --root $GITHUB_WORKSPACE/vulkansdk-macos-${VULKAN_SDK_VERSION} --accept-licenses --default-answer --confirm-command install
          hdiutil detach /Volumes/vulkansdk-macos-${VULKAN_SDK_VERSION}

          echo "VULKAN_SDK_PATH=$GITHUB_WORKSPACE/vulkansdk-macos-${VULKAN_SDK_VERSION}" >> $GITHUB_ENV
          echo "VULKAN_SDK=$VULKAN_SDK_PATH/macOS" >> $GITHUB_ENV
          echo "DYLD_LIBRARY_PATH=$VULKAN_SDK/lib:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "PATH=$VULKAN_SDK/bin:$PATH" >> $GITHUB_ENV
        
      - name: Build template
        run: |
          cp deploy/godot/custom.py godot_sources
          cd godot_sources

          scons platform=macos target=template_release arch=x86_64 vulkan_sdk_path=$GITHUB_WORKSPACE/vulkansdk-macos-${VULKAN_SDK_VERSION}
          scons platform=macos target=template_debug arch=x86_64 vulkan_sdk_path=$GITHUB_WORKSPACE/vulkansdk-macos-${VULKAN_SDK_VERSION}
          scons platform=macos target=template_release arch=arm64 vulkan_sdk_path=$GITHUB_WORKSPACE/vulkansdk-macos-${VULKAN_SDK_VERSION}
          scons platform=macos target=template_debug arch=arm64 vulkan_sdk_path=$GITHUB_WORKSPACE/vulkansdk-macos-${VULKAN_SDK_VERSION}

          lipo -create bin/godot.macos.template_release.x86_64 bin/godot.macos.template_release.arm64 -output bin/godot.macos.template_release.universal
          lipo -create bin/godot.macos.template_debug.x86_64 bin/godot.macos.template_debug.arm64 -output bin/godot.macos.template_debug.universal

          cp -r misc/dist/macos_template.app .
          mkdir -p macos_template.app/Contents/MacOS
          cp bin/godot.macos.template_release.universal macos_template.app/Contents/MacOS/godot_macos_release.universal
          cp bin/godot.macos.template_debug.universal macos_template.app/Contents/MacOS/godot_macos_debug.universal
          chmod +x macos_template.app/Contents/MacOS/godot_macos*

          zip -q -9 -r macos.zip macos_template.app
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: export_macos
          path: macos_template.app

  build-export-archive:
    name: Build export archive
    runs-on: ubuntu-22.04
    needs: [compile-linux, compile-web, compile-macos, compile-windows]
    steps:
      - name: Download all builds
        uses: actions/download-artifact@v4
        with:
          path: templates
          merge-multiple: true
      - name: Upload export templates
        uses: actions/upload-artifact@v4
        with:
          name: templates_4.2.2
          path: templates
